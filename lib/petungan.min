"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const r={BASE_JAWA:1555,BASE_GREGORIAN:1633,BASE_HIJRI:1043,INITIAL_DIFFERENCE:78,CYCLE_LENGTH:34,DIFFERENCE_DECAY:1,MIN_DIFFERENCE:1,HIJRI_OFFSET:512},M=1948439;function N(e,n,t){const a=Math.floor((14-n)/12),o=e+4800-a,i=n+12*a-3;return t+Math.floor((153*i+2)/5)+365*o+Math.floor(o/4)-Math.floor(o/100)+Math.floor(o/400)-32045}function C(e){const n=e+32044,t=Math.floor((4*n+3)/146097),a=n-Math.floor(146097*t/4),o=Math.floor((4*a+3)/1461),i=a-Math.floor(1461*o/4),s=Math.floor((5*i+2)/153),c=i-Math.floor((153*s+2)/5)+1,E=s+3-12*Math.floor(s/10);return{year:t*100+o-4800+Math.floor(s/10),month:E,day:c}}function u(e,n,t){return t+Math.ceil(29.5*(n-1))+(e-1)*354+Math.floor((3+11*e)/30)+M-1}function b(e){const n=e-M+1,t=Math.floor((30*n+10646)/10631),a=u(t,1,1),o=Math.min(12,Math.ceil((e-a+1)/29.5)),i=u(t,o,1),s=e-i+1;return{year:t,month:o,day:s}}function A(e){if(typeof e!="number"||!Number.isInteger(e))throw new Error("Invalid Javanese year: must be an integer");const{BASE_JAWA:n,INITIAL_DIFFERENCE:t,CYCLE_LENGTH:a,DIFFERENCE_DECAY:o,MIN_DIFFERENCE:i}=r;if(e===n)return r.BASE_GREGORIAN;const s=e-n;let c;if(s>=0){const l=Math.floor(s/a);c=t-l*o}else{const l=Math.ceil(-s/a);c=t+l*o}const E=Math.max(c,i);return e+E}function y(e){if(typeof e!="number"||!Number.isInteger(e))throw new Error("Invalid Gregorian year: must be an integer");if(e===r.BASE_GREGORIAN)return r.BASE_JAWA;let n=e-r.INITIAL_DIFFERENCE,t=0;const a=10;for(;t<a;){const i=A(n)-e;if(i===0)return n;if(n-=i,t++,Math.abs(i)>1e3)throw new Error(`Conversion failed for Gregorian year ${e}: error too large`)}return n}function v(e){if(typeof e!="number"||!Number.isInteger(e))throw new Error("Invalid Javanese year: must be an integer");const{BASE_JAWA:n}=r;e<n&&console.warn(`Warning: Javanese year ${e} is before calendar standardization (${n}). Conversion may not be historically accurate.`);const t=e-r.HIJRI_OFFSET,a=u(t,1,1);return C(a).year}function R(e){if(typeof e!="number"||!Number.isInteger(e))throw new Error("Invalid Gregorian year: must be an integer");const n=N(e,1,1),t=b(n).year;for(let s=-2;s<=2;s++){const c=t+s,E=u(c,1,1);if(C(E).year===e)return c+r.HIJRI_OFFSET}const a=N(e,12,31);let o=t,i=Number.POSITIVE_INFINITY;for(let s=t-3;s<=t+3;s++){const c=u(s,1,1),E=Math.max(0,Math.min(Math.abs(c-n),Math.abs(c-a)));E<i&&(i=E,o=s)}return o+r.HIJRI_OFFSET}function J(e){const n=[];r.BASE_JAWA;let t=e,a=r.INITIAL_DIFFERENCE;for(let o=0;o<78;o++)n.push({konstan:Math.max(a,r.MIN_DIFFERENCE),tahunAwal:t,tahunAkhir:t+r.CYCLE_LENGTH-1}),a=Math.max(a-r.DIFFERENCE_DECAY,r.MIN_DIFFERENCE),t+=r.CYCLE_LENGTH;return n}function d(){return J(r.BASE_JAWA)}function F(){return J(r.BASE_GREGORIAN)}function h(e,n){try{const t=n>=1e3&&n<=3e3,a=n>=1600&&n<=4e3;let o;if(t&&!a){const f=n-r.BASE_JAWA,I=Math.floor(Math.abs(f)/r.CYCLE_LENGTH);f>=0?o=r.INITIAL_DIFFERENCE-I:o=r.INITIAL_DIFFERENCE+I}else{const f=n-r.BASE_GREGORIAN,I=Math.floor(Math.abs(f)/r.CYCLE_LENGTH);f>=0?o=r.INITIAL_DIFFERENCE-I:o=r.INITIAL_DIFFERENCE+I}o=Math.max(o,r.MIN_DIFFERENCE);const i=t?r.BASE_JAWA:r.BASE_GREGORIAN,s=n-i,c=Math.floor(Math.abs(s)/r.CYCLE_LENGTH);let E,l;return s>=0?(E=i+c*r.CYCLE_LENGTH,l=E+r.CYCLE_LENGTH-1):(l=i-c*r.CYCLE_LENGTH-1,E=l-r.CYCLE_LENGTH+1),{konstan:o,tahunAwal:E,tahunAkhir:l}}catch{return null}}function L(e){return h(d(),e)}function S(e){return h(F(),e)}function G(e){try{return y(e)}catch(n){console.warn(`Direct conversion failed for ${e}, falling back to legacy method:`,n.message);let t=S(e);if(!t)throw new Error(`Cannot convert Gregorian year ${e}: outside supported range`);return e-t.konstan}}function D(e){try{return A(e)}catch(n){console.warn(`Direct conversion failed for ${e}, falling back to legacy method:`,n.message);let t=L(e);if(!t)throw new Error(`Cannot convert Javanese year ${e}: outside supported range`);return e+t.konstan}}const m=r.HIJRI_OFFSET,T=r.BASE_JAWA,_=r.BASE_HIJRI;function w(e){if(typeof e!="number"||!Number.isInteger(e))throw new Error("Invalid Javanese year: must be an integer");return e<T?(console.warn(`Warning: Javanese year ${e} is before calendar standardization (${T}). Conversion may not be historically accurate.`),e):e-m}function k(e){if(typeof e!="number"||!Number.isInteger(e))throw new Error("Invalid Hijri year: must be an integer");return e<_?(console.warn(`Warning: Hijri year ${e} is before Javanese calendar correlation (${_}). Conversion may not be historically accurate.`),e):e+m}exports.JAVANESE_CALENDAR_CONSTANTS=r;exports.cariTahunReferensi=h;exports.konversiJawaMasehiDirect=A;exports.konversiJawaMasehiPrecise=v;exports.konversiMasehiJawaDirect=y;exports.konversiMasehiJawaPrecise=R;exports.konversiTahunHijriyahKeTahunJawa=k;exports.konversiTahunJawaKeTahunHijriyah=w;exports.konversiTahunJawaKeTahunMasehi=D;exports.konversiTahunMasehiKeTahunJawa=G;exports.tabelKonstantaKonversiTahunJawa=d;exports.tabelKonstantaKonversiTahunMasehi=F;
//# sourceMappingURL=petungan.min.map
